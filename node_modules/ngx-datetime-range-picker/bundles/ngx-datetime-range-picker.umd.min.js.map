{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/lib/ngx-datetime-range-picker.constants.ts","../../src/lib/ngx-datetime-range-picker.utils.ts","../../src/lib/interfaces/index.ts","../../src/lib/ngx-datetime-range-picker.service.ts","../../src/lib/ngx-datetime-range-picker.component.ts","../../src/lib/material/material.module.ts","../../src/lib/pipes/objNgFor.pipe.ts","../../src/lib/ngx-datetime-range-picker.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","moment","require","USA_MST_TZ_CODE","USA_TZ_CODE","EU_TZ_CODE","DEFAULT_DATE_FORMAT","NgxDatetimeRangePickerConstants","DEFAULT","OPTIONS","dateArray","startDate","format","endDate","minDate","subtract","startOf","maxDate","startTime","endTime","SETTINGS","type","modelKeys","showTimezoneSelect","useLocalTimezone","timePicker","inputClass","inputDateFormat","viewDateFormat","outputDateFormat","singleDatePicker","componentDisabled","placeholder","showRowNumber","availableRanges","showRanges","disableWeekends","disableWeekdays","retailCalendar","displayBeginDate","displayEndDate","ariaLabels","inputField","STATE","activeEndDate","activeItem","left","right","activeRange","activeStartDate","calendarAvailable","customRange","dates","dateTitleText","frequencyColumnHeader","isCalendarVisible","isValidFilter","isUserModelChange","localTimezone","exec","Date","toString","selectedDateText","selectedHour","selectedMeridian","selectedMinute","selectedMonth","selectedTimezone","undefined","selectedYear","sides","timeItems","times","timeZones","todayTime","weekDayOptions","TIME_FORMAT","RANGES","daily","label","count","weekly","monthly","quarterly","yearly","CONSTANT","MONTHS_AVAILABLE","TIMES_AVAILABLE","MOMENT_CONVERSION_MAP","OFFSETS","_a","SO","WO","TZ_NAMES","_b","cloneDeep","JSON","parse","stringify","isEmpty","keys","mergeDeep","objects","_i","isObject","obj","reduce","prev","forEach","key","pVal","oVal","Array","isArray","apply","isNil","tuple","args","CalendarTypes","DEFAULT_TIME_FORMAT","Constants","DEFAULT_RANGES","NgxDatetimeRangePickerService","prototype","getDefaultOptions","getDefaultSettings","getDefaultState","checkSettingsValidity","settings","includes","errMsg","Error","formatDateToDefaultFormat","date","isNaN","Number","formatTimeToDefaultFormat","time","formattedTime","indexOf","console","warn","getCalendarRowNumberText","number","createDefaultRanges","config","ranges","rangeInfo","getSanitizedDateArray","sanitizedDateArray","_f","formattedDate","endOf","Set","getNumberOfWeeks","monthStart","day","monthEnd","Math","ceil","getYearlyWeekCount","year","yearStartDate","yearEndDate","yearEndWeekEndDate","yearStartWeekEndDate","yearStartWeekNumber","this","getWeekNumber","getMonthsAvailable","months","minDatems","valueOf","maxDatems","yearStartms","yearEndms","minDateMonthNumber","month","diff","maxMonths","getYearsAvailable","years","minYear","getSelectedYear","reverse","isDateAvailable","monthStartDate","monthEndDate","available","isWeekend","isWeekday","isInDateArray","isDateInRange","inRange","isDateActive","side","isDateToday","dateMs","todayDate","getFirstLastDay","firstDay","lastDay","firstDayMs","lastDayMs","find","d","getCalendarRowVariables","options","variables","rowNumber","columns","monthStartWeekNumber","dateRows","charAt","getCalendarRowItemVariables","rowItem","itemCount","currentItemDate","rowItemText","yearStartDateDaily","add","quarter","isRowIemValid","valid","validWeekCount","formatStartDate","returnFormat","formattedStartDate","getZoneDate","tz","_date","today","toLocaleString","timeZone","getZoneToday","formatToZoneDate","convertToViewTimeItem","item","stringified_item","datems","getTime","getDay","iterateOverDateObj","func","itemRows","rows","items","getCalendarColspan","getCalendarRowItemColspan","getDateCharacteristics","state","currentDate","currentMonthStartDate","currentMonthEndDate","active","getLabelProps","calendarType","labelFormat","Injectable","providedIn","InputFocusBlur","NgxDatetimeRangePickerComponent","element","renderer","service","_this","canBeEmpty","dateRangeModelChange","EventEmitter","dateRangeChanged","inputFocusBlur","selectedDate","assign","listen","event","target","parentElement","getElementsByClassName","className","nativeElement","contains","onCalendarClose","ngOnChanges","changes","dateRangeModel","optionService","currentValue","firstChange","previousValue","subscribe","dateOptions","plain","err","init","onDateRangeInputChange","dateRangeSelected","setDisabledState","disabled","onComponentClick","onFocusInput","emit","reason","focus","onBlurInput","blur","filterInputBox","classList","remove","isPrevAvailable","isNextAvailable","onClickPrevious","generateCalendar","onClickNext","onCellClick","itemCell","doApply","onCellMouseEnter","hoverItemText","innerText","hoverItemFirstDate","getAttribute","hoverItemLastDate","activeItemInputFieldText","hoverItemDate","bind","onCellMouseLeave","updateActiveItemInputField","onRangeClick","rangeLabel","setActiveItemOnRangeClick","updateCalendar","generateTimePicker","onCalendarLabelChange","onTimeLabelChange","timeItem","split","onTimeApply","updateInputField","initialize","parseOptions","k","selectTimeZone","parseOptionsToDefaultDateFormat","processDateRangeModel","sanitizeDates","processRanges","doDateRangeModelChange","timezoneSupport","defaultTimezone","onTimezoneChange","minTime","maxTime","_optionsKeys_1","_model_1","handleDateArray","dateRangeMinDate","dateRangeMaxDate","dateRangeStartDate","dateRangeEndDate","dateRangeMinTime","dateRangeMaxTime","dateRangeStartTime","dateRangeEndTime","sort","date1","date2","setDate","selectActiveRange","range","rangeModel","updateActiveItem","calendarLabel","week","numberOfRows","dateRowObj","rowNumberText","rowOptions","rowItemOptions","_c","itemObj","setTimeout","onChange","selected","printSelect","timeObject","hour","minute","meridian","startHour","startMinute","startDateEpoch","endDateEpoch","h","stringified_h","stringified_m","startDateText","endDataText","dateText","updateSide","itemFirstDate","itemLastDate","itemText","getNgxDatetimeRangeChangeOutput","getDateRangeModel","dRModel","dateRangeChangeOutput","outputStartDate","outputEndDate","getSelectedTimeItemText","optionHTML","selectEl","selectContainerEl","document","getElementById","innerHTML","getElementsByTagName","addEventListener","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","Input","Output","ViewChild","static","modules","MatFormFieldModule","MatButtonModule","MatInputModule","MatIconModule","MatSelectModule","NgModule","imports","exports","ObjNgFor","transform","Pipe","name","pure","NgxDatetimeRangePickerModule","parentModule","forRoot","ngModule","providers","declarations","CommonModule","FormsModule","MaterialModule","decorators","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ActiveItemSide, DateSide, AriaLabelsOptions, Options, Settings, State } from \"./interfaces\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst USA_MST_TZ_CODE = \"MST\";\nconst USA_TZ_CODE = \"PST\";\nconst EU_TZ_CODE = \"CET\";\n\nfunction getLocalTimezone(): string {\n  const tz: string = /\\((.*)\\)/.exec(new Date().toString())[1];\n\n  if (tz === \"Central Europe Standard Time\") {\n    return EU_TZ_CODE;\n  } else {\n    return USA_MST_TZ_CODE;\n  }\n}\n\nexport const DEFAULT_DATE_FORMAT = \"YYYY-MM-DD\";\n\nexport const NgxDatetimeRangePickerConstants = {\n  DEFAULT: {\n    OPTIONS: <Options>{\n      dateArray: [],\n      startDate: moment().format(\"YYYY-MM-DD\") as string,\n      endDate: moment().format(\"YYYY-MM-DD\") as string,\n      minDate: moment()\n        .subtract(2, \"year\")\n        .startOf(\"year\")\n        .format(\"YYYY-MM-DD\") as string,\n      maxDate: moment().format(\"YYYY-MM-DD\") as string,\n      startTime: \"00:00\",\n      endTime: \"23:59\"\n    },\n    SETTINGS: <Settings>{\n      type: \"daily\",\n      modelKeys: [\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"],\n      showTimezoneSelect: false,\n      useLocalTimezone: false,\n      timePicker: false,\n      inputClass: \"m1drp\",\n      inputDateFormat: null,\n      viewDateFormat: DEFAULT_DATE_FORMAT,\n      outputDateFormat: DEFAULT_DATE_FORMAT,\n      singleDatePicker: false,\n      componentDisabled: false,\n      placeholder: \"Select Date\",\n      showRowNumber: false,\n      availableRanges: {},\n      showRanges: true,\n      disableWeekends: false,\n      disableWeekdays: false,\n      retailCalendar: false,\n      displayBeginDate: false,\n      displayEndDate: false,\n      ariaLabels: {\n        inputField: \"Date Range Input Field\"\n      } as AriaLabelsOptions\n    },\n    STATE: <State>{\n      activeEndDate: null,\n      activeItem: {\n        left: {} as ActiveItemSide,\n        right: {} as ActiveItemSide\n      },\n      activeRange: null,\n      activeStartDate: null,\n      calendarAvailable: {\n        left: false,\n        right: false\n      },\n      customRange: false,\n      dates: {\n        left: {} as DateSide,\n        right: {} as DateSide\n      },\n      dateTitleText: {\n        left: \"\",\n        right: \"\"\n      },\n      frequencyColumnHeader: null,\n      isCalendarVisible: false,\n      isValidFilter: false,\n      isUserModelChange: true,\n      localTimezone: getLocalTimezone(),\n      selectedDateText: \"\",\n      selectedHour: {\n        left: \"\",\n        right: \"\"\n      },\n      selectedMeridian: {\n        left: \"\",\n        right: \"\"\n      },\n      selectedMinute: {\n        left: \"\",\n        right: \"\"\n      },\n      selectedMonth: {\n        left: \"\",\n        right: \"\"\n      },\n      selectedTimezone: undefined, // Since \"useLocalTimezone: false\" by default;\n      selectedYear: {\n        left: \"\",\n        right: \"\"\n      },\n      sides: [],\n      timeItems: [\"hour\", \"minute\"],\n      times: {\n        left: \"\",\n        right: \"\"\n      },\n      timeZones: [USA_TZ_CODE, EU_TZ_CODE],\n      todayTime: \"\",\n      weekDayOptions: [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"]\n    },\n    TIME_FORMAT: \"HH:mm\",\n    RANGES: {\n      daily: [\n        { label: \"Last 7 Days\", count: 6 },\n        { label: \"Last 30 Days\", count: 29 },\n        { label: \"Last 90 Days\", count: 89 }\n      ],\n      weekly: [\n        { label: \"Last 4 Weeks\", count: 3 },\n        { label: \"Last 13 Weeks\", count: 12 },\n        { label: \"Last 26 Weeks\", count: 25 }\n      ],\n      monthly: [\n        { label: \"Last 3 Months\", count: 2 },\n        { label: \"Last 6 Months\", count: 5 },\n        { label: \"Last 9 Months\", count: 8 }\n      ],\n      quarterly: [\n        { label: \"Last 2 Quarters\", count: 1 },\n        { label: \"Last 4 Quarters\", count: 3 }\n      ],\n      yearly: [{ label: \"Last Year\", count: 1 }]\n    }\n  },\n  CONSTANT: {\n    MONTHS_AVAILABLE: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    TIMES_AVAILABLE: [\"hour\", \"minute\"],\n    MOMENT_CONVERSION_MAP: {\n      daily: \"day\",\n      weekly: \"week\",\n      monthly: \"month\",\n      quarterly: \"quarter\",\n      yearly: \"year\"\n    },\n    USA_MST_TZ_CODE,\n    USA_TZ_CODE,\n    EU_TZ_CODE,\n    OFFSETS: {\n      [USA_TZ_CODE]: {\n        SO: -7,\n        WO: -8\n      },\n      [EU_TZ_CODE]: {\n        SO: 1,\n        WO: 0\n      }\n    },\n    TZ_NAMES: {\n      [USA_MST_TZ_CODE]: \"America/Phoenix\",\n      [USA_TZ_CODE]: \"America/Los_Angeles\",\n      [EU_TZ_CODE]: \"Europe/Berlin\"\n    }\n  }\n};\n","export const getNotAvailableText = (): string => {\n  return \"N/A\";\n};\n\n/**\n *\n * @param value the value to be cloned\n * @note will not work for objects containing functions\n */\nexport const cloneDeep = (value: Object | string | number): Object | string | number => {\n  if (value) {\n    return JSON.parse(JSON.stringify(value));\n  }\n};\n\nexport const isEmpty = (value: Object): boolean => {\n  if (value) {\n    return Object.keys(value).length <= 0;\n  }\n};\n\nexport const mergeDeep = (...objects): Object => {\n  const isObject = (obj) => obj && typeof obj === \"object\";\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\n        prev[key] = pVal.concat(...oVal);\n      } else if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, {});\n};\n\nexport const isNil = (value) => {\n  return value == null || value === undefined;\n};\n","const tuple = <T extends string[]>(...args: T) => args;\nexport const CalendarTypes = tuple(\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\");\nexport type CalendarType = typeof CalendarTypes[number];\n\nexport interface AriaLabelsOptions {\n  inputField?: string;\n}\n\nexport interface DateSide {\n  label: string;\n  months: string[];\n  years: string[];\n  itemRows: Object[];\n}\n\nexport interface TimeSide {\n  hour: any[];\n  minute: any[];\n  meridian: any[];\n}\n\nexport interface DateCharacteristics {\n  available?: boolean;\n  inRange?: boolean;\n  active?: boolean;\n  today?: boolean;\n  date?: string;\n}\n\nexport interface ActiveItemSide extends DateCharacteristics {\n  rowItemText?: string;\n  firstDay?: string;\n  lastDay?: string;\n}\n\nexport interface CalendarSides {\n  left?: DateSide | TimeSide | ActiveItemSide | string | boolean;\n  right?: DateSide | TimeSide | ActiveItemSide | string | boolean;\n}\n\nexport interface DateTimeRangeChangeOutput {\n  activeRange: string;\n  startDate: string | number;\n  endDate: string | number;\n  startTime?: string;\n  endTime?: string;\n}\n\nexport type DateTimeRangeModelChangeOutput = { [key in CalendarType]?: DateTimeRangeChangeOutput };\n\nexport interface Options {\n  dateArray?: any[];\n  startDate?: string | number;\n  endDate?: string | number;\n  minDate?: string | number;\n  maxDate?: string | number;\n  startTime?: string;\n  endTime?: string;\n  minTime?: string;\n  maxTime?: string;\n}\n\nexport interface State {\n  activeEndDate: string;\n  activeItem: CalendarSides;\n  activeRange: string;\n  activeStartDate: string;\n  calendarAvailable: CalendarSides;\n  customRange: boolean;\n  dates: CalendarSides;\n  dateTitleText: CalendarSides;\n  frequencyColumnHeader: string;\n  isCalendarVisible: boolean;\n  isValidFilter: boolean;\n  isUserModelChange: boolean;\n  localTimezone: string;\n  selectedDateText: string;\n  selectedHour: CalendarSides;\n  selectedMeridian: CalendarSides;\n  selectedMinute: CalendarSides;\n  selectedMonth: CalendarSides;\n  selectedTimezone: string;\n  selectedYear: CalendarSides;\n  sides: string[];\n  timeItems: string[];\n  times: CalendarSides;\n  timeZones: string[];\n  todayTime: string;\n  weekDayOptions: string[];\n}\n\nexport interface Settings {\n  type?: string;\n  modelKeys?: string[];\n  useLocalTimezone?: boolean;\n  showTimezoneSelect?: boolean;\n  timePicker?: boolean;\n  timezoneSupport?: boolean;\n  defaultTimezone?: string;\n  inputClass?: string;\n  inputDateFormat?: string;\n  viewDateFormat?: string;\n  outputDateFormat?: string;\n  singleDatePicker?: boolean;\n  componentDisabled?: boolean;\n  placeholder?: string;\n  showRowNumber?: boolean;\n  availableRanges?: {};\n  showRanges?: boolean;\n  disableWeekends?: boolean;\n  disableWeekdays?: boolean;\n  retailCalendar?: boolean;\n  displayBeginDate?: boolean;\n  displayEndDate?: boolean;\n  ariaLabels?: AriaLabelsOptions;\n}\n\nexport interface Config extends Options, Settings {\n  selectedTimezone?: string;\n}\n\nexport interface DateRow {\n  rowNumber: string;\n  rowNumberText: string;\n  items: DateCharacteristics[];\n}\n\nexport interface RowVariables {\n  rowNumber: string;\n  columns: number;\n}\n\nexport interface RowItemVariables {\n  itemCount: number;\n  currentItemDate: string;\n  rowItemText: string;\n  firstDay: string;\n  lastDay: string;\n}\n\nexport interface RowOptions {\n  type: string;\n  monthStartWeekNumber: number;\n  dateRows: number;\n  year: string;\n  itemCount: number;\n}\n\nexport interface RowItemOptions {\n  type: string;\n  monthStartWeekNumber: number;\n  dateRows: number;\n  rowNumber: string;\n  yearStartDate: string;\n  year: number;\n  rowItem: number;\n  columns: number;\n}\n\nexport type DateRangeModel = { [key in CalendarType]?: Options };\n","import { Injectable } from \"@angular/core\";\nimport {\n  DEFAULT_DATE_FORMAT,\n  NgxDatetimeRangePickerConstants as Constants\n} from \"./ngx-datetime-range-picker.constants\";\nimport { getNotAvailableText, cloneDeep, isNil } from \"./ngx-datetime-range-picker.utils\";\nimport {\n  Options,\n  Settings,\n  CalendarSides,\n  State,\n  RowItemVariables,\n  RowItemOptions,\n  DateCharacteristics,\n  Config,\n  RowOptions,\n  CalendarTypes,\n  RowVariables,\n  CalendarType\n} from \"./interfaces\";\nimport { Moment } from \"moment\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\n\nconst DEFAULT_TIME_FORMAT = Constants.DEFAULT.TIME_FORMAT;\nconst MONTHS_AVAILABLE = Constants.CONSTANT.MONTHS_AVAILABLE;\nconst TZ_NAMES = Constants.CONSTANT.TZ_NAMES;\nconst DEFAULT_RANGES = Constants.DEFAULT.RANGES;\nconst MOMENT_CONVERSION_MAP = Constants.CONSTANT.MOMENT_CONVERSION_MAP;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NgxDatetimeRangePickerService {\n  getDefaultOptions(): Options {\n    return cloneDeep(Constants.DEFAULT.OPTIONS) as Options;\n  }\n\n  getDefaultSettings(): Settings {\n    return cloneDeep(Constants.DEFAULT.SETTINGS) as Settings;\n  }\n\n  getDefaultState(): State {\n    return cloneDeep(Constants.DEFAULT.STATE) as State;\n  }\n\n  checkSettingsValidity(settings: Settings) {\n    if (settings.type && !CalendarTypes.includes(settings.type as CalendarType)) {\n      const errMsg = `${settings.type} is an invalid calendar type. It should one of ${[...CalendarTypes]}`;\n      throw new Error(errMsg);\n    }\n  }\n\n  formatDateToDefaultFormat(date: string | number, format: string): string {\n    let formattedDate = null;\n    if (!date) {\n      return;\n    }\n\n    if (!isNaN(Number(date))) {\n      formattedDate = moment(date).format(DEFAULT_DATE_FORMAT);\n    } else {\n      formattedDate = moment(date, format).format(DEFAULT_DATE_FORMAT);\n    }\n\n    return formattedDate;\n  }\n\n  formatTimeToDefaultFormat(time: string) {\n    let formattedTime = null;\n    if (!time) {\n      return;\n    }\n\n    if (time.indexOf(\":\") > -1) {\n      if (time.indexOf(\"AM\") > -1 || time.indexOf(\"PM\") > -1) {\n        formattedTime = moment(time, \"h:mm A\").format(DEFAULT_TIME_FORMAT);\n      } else {\n        formattedTime = time;\n      }\n    } else {\n      console.warn(\n        `WARN_NGX_DATETIME_RANGE_PICKER:\n            The provided time is not in correct format.\n            Format: HH:mm or hh:mm A\n        `\n      );\n    }\n    return formattedTime;\n  }\n\n  getCalendarRowNumberText(type, number) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return `W${number}`;\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return `Q${number}`;\n        case \"quarterly\":\n          return `${number}`;\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  createDefaultRanges(config: Config): Object {\n    const ranges = {};\n    const type: string = config.type;\n    const maxDate: string = cloneDeep(config.maxDate) as string;\n\n    DEFAULT_RANGES[type].forEach((rangeInfo: { label: string; count: number }) => {\n      ranges[rangeInfo.label] = {\n        startDate: moment(maxDate, DEFAULT_DATE_FORMAT)\n          .subtract(rangeInfo.count, MOMENT_CONVERSION_MAP[type])\n          .format(DEFAULT_DATE_FORMAT),\n        endDate: maxDate\n      };\n    });\n\n    ranges[\"Custom Range\"] = { startDate: null, endDate: null };\n    return ranges;\n  }\n\n  getSanitizedDateArray(config: Config): string[] {\n    const sanitizedDateArray: string[] = [];\n    const type = config.type;\n    const dateArray = config.dateArray;\n    const inputDateFormat = config.inputDateFormat;\n\n    // dateArray can have nulls\n    dateArray.forEach((date) => {\n      if (!date) {\n        return;\n      }\n\n      let format: string = null;\n\n      if (isNaN(Number(date))) {\n        if (inputDateFormat) {\n          format = inputDateFormat;\n        } else {\n          format = moment(date)._f; // moment does not support this\n        }\n      }\n\n      if (inputDateFormat !== moment(date)._f) {\n        console.warn(\n          `ERR_NGX_DATETIME_RANGE_PICKER:\n              inputDateFormat !== dateFormat in dateArray.\n              Converted dates might not be as expected\n            `\n        );\n      }\n\n      const value: Moment = format ? moment(date, format) : moment(date);\n\n      if (value) {\n        const formattedDate = value.endOf(MOMENT_CONVERSION_MAP[type as string]).format(DEFAULT_DATE_FORMAT);\n        sanitizedDateArray.push(formattedDate);\n      } else {\n        console.warn(\n          `ERR_NGX_DATETIME_RANGE_PICKER:\n              dateArray values are in unknown format.\n              Pass the format or pass the dates in known format\n            `\n        );\n      }\n    });\n\n    return [...new Set(sanitizedDateArray)];\n  }\n\n  getNumberOfWeeks(date): number {\n    if (!date) {\n      return;\n    }\n\n    const monthStart: number = moment(date, DEFAULT_DATE_FORMAT)\n      .startOf(\"month\")\n      .day();\n    const monthEnd: number = Number(\n      moment(date, DEFAULT_DATE_FORMAT)\n        .endOf(\"month\")\n        .format(\"D\")\n    );\n    return Math.ceil((monthStart + monthEnd) / 7);\n  }\n\n  getYearlyWeekCount(year: string): number {\n    if (!year) {\n      return;\n    }\n\n    const yearStartDate: string = moment(year, \"YYYY\")\n      .startOf(\"year\")\n      .format(DEFAULT_DATE_FORMAT);\n    const yearEndDate: string = moment(year, \"YYYY\")\n      .endOf(\"year\")\n      .format(DEFAULT_DATE_FORMAT);\n    const yearEndWeekEndDate: string = moment(yearEndDate, DEFAULT_DATE_FORMAT)\n      .startOf(\"week\")\n      .format(DEFAULT_DATE_FORMAT);\n    const yearStartWeekEndDate: string = moment(yearStartDate, DEFAULT_DATE_FORMAT)\n      .endOf(\"week\")\n      .format(DEFAULT_DATE_FORMAT);\n\n    const yearStartWeekNumber: number = this.getWeekNumber(yearStartWeekEndDate) as number;\n    const yearEndWeekNumber: number = this.getWeekNumber(yearEndWeekEndDate) as number;\n\n    return yearEndWeekNumber - yearStartWeekNumber + 1;\n  }\n\n  getMonthsAvailable(minDate, maxDate, selectedYear): string[] {\n    const months: string[] = [];\n\n    if (!minDate || !maxDate || !selectedYear) {\n      return;\n    }\n\n    minDate = moment(minDate, DEFAULT_DATE_FORMAT).startOf(\"month\");\n    maxDate = moment(maxDate, DEFAULT_DATE_FORMAT).startOf(\"month\");\n\n    let minDatems: number = moment(minDate, DEFAULT_DATE_FORMAT).valueOf();\n    let maxDatems: number = moment(maxDate, DEFAULT_DATE_FORMAT).valueOf();\n    const yearStartms: number = moment()\n      .year(selectedYear)\n      .startOf(\"year\")\n      .valueOf();\n    const yearEndms: number = moment()\n      .year(selectedYear)\n      .endOf(\"year\")\n      .valueOf();\n\n    if (minDatems < yearStartms) {\n      minDatems = yearStartms;\n    }\n    if (maxDatems > yearEndms) {\n      maxDatems = yearEndms;\n    }\n\n    let minDateMonthNumber: number = moment(minDatems).month();\n    const diff: number = moment(maxDatems).diff(moment(minDatems), \"months\");\n    const maxMonths: number = diff < MONTHS_AVAILABLE.length ? diff : MONTHS_AVAILABLE.length;\n\n    for (let i = 0; i <= maxMonths; i++) {\n      if (minDateMonthNumber >= MONTHS_AVAILABLE.length) {\n        months.push(MONTHS_AVAILABLE[minDateMonthNumber - MONTHS_AVAILABLE.length]);\n      } else {\n        months.push(MONTHS_AVAILABLE[minDateMonthNumber]);\n      }\n      minDateMonthNumber++;\n    }\n\n    return months;\n  }\n\n  getYearsAvailable(config: Config): string[] {\n    const minDate: string | number = config ? config.minDate : \"\";\n    const maxDate: string | number = config ? config.maxDate : \"\";\n    const years: string[] = [];\n\n    if (minDate && maxDate) {\n      const minYear: number = Number(this.getSelectedYear(minDate));\n      const maxYear: number = Number(this.getSelectedYear(maxDate));\n      const diff = maxYear - minYear;\n\n      for (let i = 0; i <= diff; i++) {\n        years.push(`${minYear + i}`);\n      }\n    }\n    return years.reverse();\n  }\n\n  isDateAvailable(\n    date: number,\n    minDate: number,\n    maxDate: number,\n    startDate: number,\n    endDate: number,\n    monthStartDate: number,\n    monthEndDate: number,\n    config: Config\n  ): boolean {\n    let available = false;\n    const type: string = config.type;\n    const disableWeekends: boolean = config.disableWeekends;\n    const disableWeekdays: boolean = config.disableWeekdays;\n\n    if (type === \"daily\") {\n      minDate = minDate > monthStartDate ? minDate : monthStartDate;\n      maxDate = maxDate < monthEndDate ? maxDate : monthEndDate;\n    }\n\n    if (date >= minDate && date <= maxDate) {\n      available = true;\n\n      if (available) {\n        if (disableWeekends) {\n          available = !this.isWeekend(date);\n        }\n        if (disableWeekdays) {\n          available = !this.isWeekday(date);\n        }\n        if (config.dateArray.length) {\n          available = this.isInDateArray(date, config.dateArray, DEFAULT_DATE_FORMAT);\n        }\n      }\n    }\n    return available;\n  }\n\n  isDateInRange(\n    date: number,\n    minDate: number,\n    maxDate: number,\n    startDate: number,\n    endDate: number,\n    monthStartDate: number,\n    monthEndDate: number,\n    available: boolean,\n    config: Config\n  ): boolean {\n    let inRange = false;\n    const type: string = config.type;\n    const singleDatePicker: boolean = config.singleDatePicker;\n\n    if (!singleDatePicker) {\n      if (type === \"daily\") {\n        minDate = monthStartDate;\n        maxDate = monthEndDate;\n      }\n      if (date >= startDate && date <= endDate && date >= minDate && date <= maxDate) {\n        if (available) {\n          inRange = true;\n        }\n      }\n    }\n    return inRange;\n  }\n\n  isDateActive(date: number, startDate: number, endDate: number, side: string): boolean {\n    return (date === startDate && side === \"left\") || (date === endDate && side === \"right\");\n  }\n\n  isDateToday(dateMs: number, config): boolean {\n    const todayDate: string = moment().format(DEFAULT_DATE_FORMAT);\n    const type: string = config.type;\n    const { firstDay, lastDay } = this.getFirstLastDay(todayDate, type);\n    const firstDayMs: number = moment(firstDay, DEFAULT_DATE_FORMAT).valueOf();\n    const lastDayMs: number = moment(lastDay, DEFAULT_DATE_FORMAT).valueOf();\n    return dateMs >= firstDayMs && dateMs <= lastDayMs;\n  }\n\n  isWeekday(date: number, format?: string): boolean {\n    return !this.isWeekend(date, format);\n  }\n\n  isWeekend(date: number, format?: string): boolean {\n    if (!format) {\n      format = null;\n    }\n    const day = moment(date, format).day();\n    return day === 0 || day === 6;\n  }\n\n  isInDateArray(date: number, dateArray: any[], format?: string): boolean {\n    if (!format) {\n      format = null;\n    }\n    return dateArray.find((d) => moment(d, format).valueOf() === date) !== undefined;\n  }\n\n  getCalendarRowVariables(options: RowOptions): RowVariables {\n    const variables: RowVariables = {\n      rowNumber: \"\",\n      columns: 0\n    };\n    const type: string = options.type;\n    const monthStartWeekNumber: number = options.monthStartWeekNumber;\n    const dateRows: number = options.dateRows;\n    const year = `${options.year}`;\n\n    if (type === \"daily\") {\n      variables.rowNumber = `${monthStartWeekNumber + dateRows}`;\n      variables.columns = 6;\n    } else if (type === \"weekly\") {\n      variables.rowNumber = ``;\n      variables.columns = 6;\n    } else if (type === \"monthly\") {\n      variables.rowNumber = `${dateRows + 1}`;\n      variables.columns = 2;\n    } else if (type === \"quarterly\") {\n      variables.rowNumber = year.charAt(dateRows);\n      variables.columns = 0;\n    } else if (type === \"yearly\") {\n      variables.rowNumber = \"\";\n      variables.columns = 0;\n    }\n\n    return variables;\n  }\n\n  getCalendarRowItemVariables(options: RowItemOptions): RowItemVariables {\n    const { type, monthStartWeekNumber, yearStartDate, year, rowItem, dateRows, columns } = options;\n\n    const itemCount: number = rowItem + dateRows * columns + dateRows;\n    let currentItemDate = \"\";\n    let rowItemText = \"\";\n\n    if (type === \"daily\") {\n      if (!isNil(monthStartWeekNumber) && !isNil(dateRows) && !isNil(year)) {\n        const yearStartDateDaily = moment()\n          .year(year)\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FORMAT);\n        currentItemDate = moment(yearStartDateDaily, DEFAULT_DATE_FORMAT)\n          .add(monthStartWeekNumber + dateRows - 1, \"week\")\n          .startOf(\"week\")\n          .add(rowItem, \"day\")\n          .format(DEFAULT_DATE_FORMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FORMAT).format(\"D\");\n      }\n    } else if (type === \"weekly\") {\n      if (!isNil(yearStartDate) && !isNil(itemCount)) {\n        currentItemDate = moment(yearStartDate, DEFAULT_DATE_FORMAT)\n          .add(itemCount, \"week\")\n          .endOf(\"week\")\n          .format(DEFAULT_DATE_FORMAT);\n        const weekNumber: any = itemCount + 1;\n        rowItemText = `W${weekNumber}`;\n      }\n    } else if (type === \"monthly\") {\n      if (!isNil(itemCount) && !isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .month(itemCount)\n          .endOf(\"month\")\n          .format(DEFAULT_DATE_FORMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FORMAT).format(\"MMM\");\n      }\n    } else if (type === \"quarterly\") {\n      if (!isNil(itemCount) && !isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .quarter(itemCount + 1)\n          .endOf(\"quarter\")\n          .format(DEFAULT_DATE_FORMAT);\n        rowItemText = `Quarter ${itemCount + 1}`;\n      }\n    }\n\n    const { firstDay, lastDay } = this.getFirstLastDay(currentItemDate, type);\n\n    return {\n      itemCount,\n      currentItemDate,\n      rowItemText,\n      firstDay,\n      lastDay\n    };\n  }\n\n  isRowIemValid(options: RowOptions): boolean {\n    let valid = false;\n    const type: string = options.type;\n    const year: string = options.year;\n    const itemCount: number = options.itemCount;\n    const validWeekCount: number = this.getYearlyWeekCount(year);\n\n    if (type === \"daily\") {\n      valid = true;\n    } else if (type === \"weekly\") {\n      if (itemCount < validWeekCount) {\n        valid = true;\n      }\n    } else if (type === \"monthly\") {\n      valid = true;\n    } else if (type === \"quarterly\") {\n      valid = true;\n    }\n\n    return valid;\n  }\n\n  formatStartDate(config: Config, returnFormat: string): string {\n    const startDate: string | number = config ? config.startDate : null;\n    const type: string = config ? config.type : \"\";\n    let formattedStartDate: string = null;\n\n    if (startDate) {\n      formattedStartDate = moment(startDate, DEFAULT_DATE_FORMAT)\n        .startOf(MOMENT_CONVERSION_MAP[type])\n        .format(returnFormat);\n    }\n\n    return formattedStartDate;\n  }\n\n  getSelectedYear(date: string | number): number {\n    return moment(date, DEFAULT_DATE_FORMAT).format(\"YYYY\");\n  }\n\n  getFirstLastDay(date: string, type: string): { firstDay: string; lastDay: string } {\n    let firstDay = \"\";\n    let lastDay = \"\";\n\n    if (type === \"daily\") {\n      firstDay = lastDay = date;\n    } else if (type === \"weekly\") {\n      firstDay = moment(date, DEFAULT_DATE_FORMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FORMAT);\n      lastDay = moment(date, DEFAULT_DATE_FORMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FORMAT);\n    } else if (type === \"monthly\") {\n      firstDay = moment(date, DEFAULT_DATE_FORMAT)\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FORMAT);\n      lastDay = moment(date, DEFAULT_DATE_FORMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FORMAT);\n    } else if (type === \"quarterly\") {\n      firstDay = moment(date, DEFAULT_DATE_FORMAT)\n        .startOf(\"quarter\")\n        .format(DEFAULT_DATE_FORMAT);\n      lastDay = moment(date, DEFAULT_DATE_FORMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FORMAT);\n    } else if (type === \"yearly\") {\n      firstDay = moment(date, DEFAULT_DATE_FORMAT)\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FORMAT);\n      lastDay = moment(date, DEFAULT_DATE_FORMAT)\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FORMAT);\n    }\n\n    return { firstDay, lastDay };\n  }\n\n  getZoneDate(tz: string, format: string, date?: string): Moment {\n    let _date: number = moment().valueOf();\n\n    if (date) {\n      _date = moment(date, format)\n        .startOf(\"day\")\n        .valueOf();\n    }\n\n    const today = new Date(_date).toLocaleString(\"en-US\", {\n      timeZone: TZ_NAMES[tz]\n    });\n\n    return moment(today, \"MM/DD/YYYY, hh:mm:ss A\");\n  }\n\n  getZoneToday(tz: string, viewDateFormat: string): string {\n    const today: Moment = this.getZoneDate(tz, viewDateFormat);\n    return moment(today).format(`${viewDateFormat}  hh:mm A`);\n  }\n\n  formatToZoneDate(tz: string, format: string, date: string): string {\n    const formattedDate: Moment = this.getZoneDate(tz, format, date);\n    return moment(formattedDate).format(`${format}`);\n  }\n\n  convertToViewTimeItem(item: string | number): string {\n    let stringified_item = item + \"\";\n    if (stringified_item.length === 1) {\n      stringified_item = `0${stringified_item}`;\n    }\n    return stringified_item;\n  }\n\n  getWeekNumber(date: string): string | number {\n    if (date) {\n      const year: number = moment(date, \"YYYY-MM-DD\").year();\n      const month: number = moment(date, \"YYYY-MM-DD\").month();\n      const day: number = Number(moment(date, \"YYYY-MM-DD\").format(\"D\"));\n\n      const yearStartms: Date = new Date(year, 0, 1);\n      const datems: Date = new Date(year, month, day);\n      return Math.ceil(((datems.getTime() - yearStartms.getTime()) / 86400000 + yearStartms.getDay() + 1) / 7);\n    } else {\n      console.warn(`\n        WARN_NGX_DATETIME_RANGE_PICKER | getWeekNumber:\n        Invalid date\n      `);\n      return getNotAvailableText();\n    }\n  }\n\n  iterateOverDateObj(dates: CalendarSides, func) {\n    for (const side in dates) {\n      if (side) {\n        const sideDates = dates[side];\n        sideDates.itemRows.forEach((rows) => {\n          rows.items.forEach((rowItem) => {\n            func(rowItem);\n          });\n        });\n      }\n    }\n  }\n\n  getCalendarColspan(type: string): number {\n    if (type === \"daily\") {\n      return 6;\n    } else if (type === \"weekly\") {\n      return 8;\n    } else if (type === \"monthly\") {\n      return 3;\n    } else if (type === \"quarterly\") {\n      return 1;\n    } else if (type === \"yearly\") {\n      return 1;\n    }\n  }\n\n  getCalendarRowItemColspan(type: string): number {\n    if (type === \"monthly\") {\n      return 3;\n    } else if (type === \"quarterly\") {\n      return 6;\n    } else if (type === \"yearly\") {\n      return 6;\n    }\n  }\n\n  getDateCharacteristics(config: Config, state: State, date: string, month: string, side: string): DateCharacteristics {\n    const currentDate: number = moment(date, DEFAULT_DATE_FORMAT)\n      .startOf(\"day\")\n      .valueOf();\n\n    let _date: string = this.formatDateToDefaultFormat(config.minDate, DEFAULT_DATE_FORMAT);\n    const minDate: number = moment(_date, DEFAULT_DATE_FORMAT)\n      .startOf(\"day\")\n      .valueOf();\n\n    _date = this.formatDateToDefaultFormat(config.maxDate, DEFAULT_DATE_FORMAT);\n    const maxDate: number = moment(_date, DEFAULT_DATE_FORMAT)\n      .startOf(\"day\")\n      .valueOf();\n\n    _date = this.formatDateToDefaultFormat(config.startDate, DEFAULT_DATE_FORMAT);\n    const startDate: number = moment(_date, DEFAULT_DATE_FORMAT)\n      .startOf(\"day\")\n      .valueOf();\n\n    _date = this.formatDateToDefaultFormat(config.endDate, DEFAULT_DATE_FORMAT);\n    const endDate: number = moment(_date, DEFAULT_DATE_FORMAT)\n      .startOf(\"day\")\n      .valueOf();\n\n    const currentMonthStartDate: number = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthEndDate: number = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n\n    const available: boolean = this.isDateAvailable(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      config\n    );\n    const inRange: boolean = this.isDateInRange(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      available,\n      config\n    );\n    const active: boolean = this.isDateActive(currentDate, startDate, endDate, side);\n    const today: boolean = this.isDateToday(currentDate, config);\n\n    // Active\n    if (currentDate === startDate && side === \"left\") {\n      state.activeStartDate = date;\n    } else if (currentDate === endDate && side === \"right\") {\n      state.activeEndDate = date;\n    }\n\n    return { available, inRange, active, today };\n  }\n\n  getLabelProps(\n    state: State,\n    calendarType: string,\n    side: string\n  ): { label: string; labelFormat: string; type: string } {\n    let label: string, labelFormat: string, type: string;\n\n    if (calendarType === \"daily\") {\n      label = `${state.selectedMonth[side]} ${state.selectedYear[side]}`;\n      labelFormat = \"MMM YYYY\";\n      type = \"month\";\n    } else {\n      label = `${state.selectedYear[side]}`;\n      labelFormat = \"YYYY\";\n      type = \"year\";\n    }\n\n    return { label, labelFormat, type };\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  Renderer2\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport {\n  DEFAULT_DATE_FORMAT,\n  NgxDatetimeRangePickerConstants as Constants\n} from \"./ngx-datetime-range-picker.constants\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\nimport { cloneDeep, isEmpty, mergeDeep, isNil } from \"./ngx-datetime-range-picker.utils\";\nimport {\n  Options,\n  Settings,\n  State,\n  RowItemVariables,\n  RowOptions,\n  RowItemOptions,\n  DateSide,\n  ActiveItemSide,\n  DateCharacteristics,\n  DateRangeModel,\n  Config,\n  TimeSide,\n  DateRow,\n  RowVariables,\n  DateTimeRangeChangeOutput,\n  DateTimeRangeModelChangeOutput\n} from \"./interfaces\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\n\nenum InputFocusBlur {\n  focus = 1,\n  blur = 2\n}\n\nconst DEFAULT_TIME_FORMAT = Constants.DEFAULT.TIME_FORMAT;\nconst USA_TZ_CODE = Constants.CONSTANT.USA_TZ_CODE;\n\n@Component({\n  selector: \"ngx-datetime-range-picker\",\n  templateUrl: \"./ngx-datetime-range-picker.component.html\",\n  styleUrls: [\"./ngx-datetime-range-picker.component.scss\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxDatetimeRangePickerComponent implements OnChanges {\n  @Input() options: Options;\n  @Input() settings: Settings;\n  @Input() optionService: Observable<any>;\n  @Input() dateRangeModel: Options | DateRangeModel;\n  @Input() canBeEmpty = false;\n  @Output() dateRangeModelChange: EventEmitter<Options | DateRangeModel> = new EventEmitter<Options | DateRangeModel>();\n  @Output() dateRangeChanged: EventEmitter<Options> = new EventEmitter<Options>();\n  @Output() inputFocusBlur: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() selectedDate: EventEmitter<Options> = new EventEmitter<Options>();\n  @ViewChild(\"filterInputBox\", { static: false }) filterInputBox: any;\n\n  state: State = this.service.getDefaultState();\n\n  config: Config;\n\n  constructor(public element: ElementRef, private renderer: Renderer2, private service: NgxDatetimeRangePickerService) {\n    this.options = this.service.getDefaultOptions();\n    this.settings = this.service.getDefaultSettings();\n    this.config = Object.assign(this.options, this.settings);\n\n    this.state.todayTime = this.service.getZoneToday(this.state.selectedTimezone, this.config.viewDateFormat);\n\n    this.renderer.listen(\"document\", \"click\", (event: MouseEvent) => {\n      if (\n        this.state.isCalendarVisible &&\n        <HTMLElement>event.target &&\n        !(<HTMLElement>event.target).parentElement.getElementsByClassName(\"ngx-datetime-range-picker-select-panel\")\n          .length &&\n        (<HTMLElement>event.target).className !== \"mat-option-text\" &&\n        this.element.nativeElement !== event.target &&\n        !this.element.nativeElement.contains(event.target)\n      ) {\n        this.onCalendarClose(event);\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    const { canBeEmpty, settings, dateRangeModel, optionService, options } = changes;\n\n    if (canBeEmpty) {\n      this.canBeEmpty = canBeEmpty.currentValue;\n    }\n\n    if (settings) {\n      this.service.checkSettingsValidity(settings.currentValue as Settings);\n      this.settings = mergeDeep(this.settings, settings.currentValue);\n    }\n\n    if (dateRangeModel) {\n      this.dateRangeModel = dateRangeModel.currentValue;\n    }\n\n    if (dateRangeModel && !dateRangeModel.firstChange) {\n      const previousValue = dateRangeModel.previousValue[this.config.type];\n      const currentValue = dateRangeModel.currentValue[this.config.type];\n      if (\n        previousValue &&\n        currentValue &&\n        previousValue.startDate === currentValue.startDate &&\n        previousValue.endDate === currentValue.endDate\n      ) {\n        return;\n      }\n    }\n\n    if (optionService && optionService.currentValue) {\n      optionService.currentValue.subscribe(\n        (dateOptions: any) => {\n          if (typeof dateOptions === \"object\" && !Array.isArray(dateOptions)) {\n            this.options = dateOptions.plain ? dateOptions.plain() : dateOptions;\n          }\n        },\n        (err) => {\n          console.error(`ERR_NGX_DATETIME_RANGE_PICKER:\n            Filter Call Failure:\n            ${err}\n          `);\n        },\n        () => {\n          this.init();\n        }\n      );\n    }\n\n    if (options) {\n      this.options = options ? options.currentValue : this.options;\n    }\n\n    if (!optionService) {\n      this.init();\n    }\n  }\n\n  // Events\n  onDateRangeInputChange(value: string) {\n    this.dateRangeSelected();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.config.componentDisabled = disabled;\n  }\n\n  onComponentClick(): void {\n    this.state.isCalendarVisible = !this.state.isCalendarVisible;\n  }\n\n  onFocusInput(event: MouseEvent): void {\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.focus,\n      value: (<HTMLInputElement>event.target).value\n    });\n  }\n\n  onBlurInput(event: MouseEvent): void {\n    const value = (<HTMLInputElement>event.target).value;\n    this.state.selectedDateText = value;\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.blur,\n      value\n    });\n  }\n\n  onCalendarClose(event: MouseEvent): void {\n    if (this.config.startDate && this.config.endDate) {\n      this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n      this.state.isCalendarVisible = false;\n    } else {\n      // this.filterInputBox.nativeElement.classList.add('empty-filter');\n    }\n  }\n\n  isPrevAvailable(side): boolean {\n    const { label, labelFormat, type } = this.service.getLabelProps(this.state, this.config.type, side);\n\n    return (\n      moment(label, labelFormat)\n        .startOf(type)\n        .valueOf() >\n      moment(this.config.minDate, DEFAULT_DATE_FORMAT)\n        .startOf(type)\n        .valueOf()\n    );\n  }\n\n  isNextAvailable(side): boolean {\n    const { label, labelFormat, type } = this.service.getLabelProps(this.state, this.config.type, side);\n\n    return (\n      moment(label, labelFormat)\n        .endOf(type)\n        .valueOf() <\n      moment(this.config.maxDate, DEFAULT_DATE_FORMAT)\n        .endOf(type)\n        .valueOf()\n    );\n  }\n\n  getCalendarColspan() {\n    return this.service.getCalendarColspan(this.config.type);\n  }\n\n  getCalendarRowItemColspan() {\n    return this.service.getCalendarRowItemColspan(this.config.type);\n  }\n\n  onClickPrevious(side: string) {\n    const { label, labelFormat, type } = this.service.getLabelProps(this.state, this.config.type, side);\n    const startDate = moment(label, labelFormat)\n      .subtract(1, type)\n      .startOf(type)\n      .format(DEFAULT_DATE_FORMAT);\n\n    this.state.dates[side] = this.generateCalendar(startDate, side);\n  }\n\n  onClickNext(side: string) {\n    const { label, labelFormat, type } = this.service.getLabelProps(this.state, this.config.type, side);\n    const endDate = moment(label, labelFormat)\n      .add(1, type)\n      .endOf(type)\n      .format(DEFAULT_DATE_FORMAT);\n\n    this.state.dates[side] = this.generateCalendar(endDate, side);\n  }\n\n  onCellClick(item: DateCharacteristics, itemCell, side: string) {\n    const date: number = moment(item.date, DEFAULT_DATE_FORMAT).valueOf();\n    const startDate: number = moment(this.config.startDate, DEFAULT_DATE_FORMAT).valueOf();\n    const endDate: number = moment(this.config.endDate, DEFAULT_DATE_FORMAT).valueOf();\n    const minDate: number = moment(this.config.minDate, DEFAULT_DATE_FORMAT).valueOf();\n    const maxDate: number = moment(this.config.maxDate, DEFAULT_DATE_FORMAT).valueOf();\n\n    if (!item.available) {\n      if (date < minDate || date > maxDate) {\n        return;\n      }\n      this.state.dates[side] = this.generateCalendar(item.date, side);\n    }\n\n    if (endDate || date < startDate) {\n      this.config.endDate = null;\n      this.config.startDate = item.date;\n      this.state.activeItem.left = item;\n    } else if (!endDate && date < startDate) {\n      this.config.endDate = cloneDeep(this.config.startDate) as string;\n      this.state.activeItem.right = item;\n    } else {\n      this.config.endDate = item.date;\n      this.state.activeItem.right = item;\n    }\n\n    if (this.config.singleDatePicker) {\n      this.config.endDate = cloneDeep(this.config.startDate) as string;\n      this.state.activeItem.right = this.state.activeItem.left = item;\n    }\n\n    this.doApply();\n  }\n\n  onCellMouseEnter(item: DateCharacteristics, itemCell) {\n    if (!item.available) {\n      return;\n    }\n\n    const date: number = moment(item.date, DEFAULT_DATE_FORMAT).valueOf();\n    const startDate: number = moment(this.config.startDate, DEFAULT_DATE_FORMAT).valueOf();\n    const endDate: number = moment(this.config.endDate, DEFAULT_DATE_FORMAT).valueOf();\n    const hoverItemText: string = itemCell ? itemCell.innerText : \"\";\n    let hoverItemFirstDate: string = itemCell ? itemCell.getAttribute(\"firstDay\") : \"\";\n    let hoverItemLastDate: string = itemCell ? itemCell.getAttribute(\"lastDay\") : \"\";\n\n    hoverItemFirstDate = moment(hoverItemFirstDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat);\n    hoverItemLastDate = moment(hoverItemLastDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat);\n\n    let activeItemInputFieldText = `${hoverItemText} (${hoverItemFirstDate} - ${hoverItemLastDate})`;\n\n    if (this.config.type === \"daily\") {\n      activeItemInputFieldText = `${hoverItemLastDate}`;\n    }\n\n    if (!endDate) {\n      const func = (rowItem) => {\n        if (rowItem.available) {\n          const hoverItemDate = rowItem.date ? moment(rowItem.date, DEFAULT_DATE_FORMAT).valueOf() : rowItem.date;\n          if ((hoverItemDate > startDate && hoverItemDate < date) || date === hoverItemDate) {\n            rowItem.inRange = true;\n            this.state.dateTitleText.right = activeItemInputFieldText;\n          }\n        }\n      };\n\n      this.service.iterateOverDateObj(this.state.dates, func.bind(this));\n    } else {\n      if (this.config.singleDatePicker) {\n        this.state.dateTitleText.right = activeItemInputFieldText;\n      } else {\n        this.state.dateTitleText.left = activeItemInputFieldText;\n      }\n    }\n  }\n\n  onCellMouseLeave() {\n    if (!this.config.endDate) {\n      const func = (rowItem) => {\n        rowItem.inRange = false;\n      };\n      this.service.iterateOverDateObj(this.state.dates, func.bind(this));\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  onRangeClick(rangeLabel: string, dateRangeModel: Options) {\n    this.state.activeRange = rangeLabel;\n    if (rangeLabel === \"Custom Range\") {\n      this.state.customRange = true;\n    } else {\n      this.state.customRange = false;\n      this.config.startDate = dateRangeModel.startDate;\n      this.config.endDate = dateRangeModel.endDate;\n      if (this.config.timePicker) {\n        this.state.times = {};\n      }\n      this.setActiveItemOnRangeClick();\n    }\n  }\n\n  updateCalendar() {\n    this.state.sides.length = 0;\n    this.state.dates = {};\n    // takes 223 milliSeconds\n    // Order is important left - right\n    if (!this.config.singleDatePicker) {\n      this.state.sides.push(\"left\");\n      this.state.dates.left = this.generateCalendar(this.config.startDate, \"left\");\n      if (this.config.timePicker) {\n        this.state.times.left = this.generateTimePicker(this.config.startTime, \"left\");\n      }\n    }\n    this.state.sides.push(\"right\");\n    this.state.dates.right = this.generateCalendar(this.config.endDate, \"right\");\n    if (this.config.timePicker) {\n      this.state.times.right = this.generateTimePicker(this.config.endTime, \"right\");\n    }\n  }\n\n  onCalendarLabelChange(label: string, side: string, type: string) {\n    this.state.isCalendarVisible = true;\n    if (type === \"month\") {\n      this.state.selectedMonth[side] = label;\n    } else if (type === \"year\") {\n      this.state.selectedYear[side] = label;\n    }\n\n    if (this.config.type !== \"daily\") {\n      this.state.selectedMonth[side] = \"Jun\";\n    }\n\n    if (this.config.type !== \"yearly\") {\n      const selectedMonth = `${this.state.selectedMonth[side]} ${this.state.selectedYear[side]}`;\n      const date: string = moment(selectedMonth, \"MMM YYYY\")\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FORMAT);\n      this.state.dates[side] = this.generateCalendar(date, side);\n    } else {\n      if (this.state.selectedYear.left <= this.state.selectedYear.right && side === \"right\") {\n        this.config.startDate = moment(this.state.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FORMAT);\n        this.config.endDate = moment(this.state.selectedYear.right, \"YYYY\")\n          .endOf(\"year\")\n          .format(DEFAULT_DATE_FORMAT);\n\n        this.doApply();\n      }\n      const config = {\n        startDate: moment(this.state.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FORMAT),\n        type: \"yearly\"\n      };\n      const startDate: string = this.service.formatStartDate(config, this.config.viewDateFormat);\n      const endDate: string = this.config.endDate\n        ? moment(this.config.endDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat)\n        : \"\";\n      this.state.dateTitleText.left = `${startDate}`;\n      this.state.dateTitleText.right = `${endDate}`;\n    }\n  }\n\n  onTimeLabelChange(item: string, side: string, timeItem: string) {\n    let time = null;\n    if (side === \"left\") {\n      time = this.config.startTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.startTime = `${item}:${time[1]}`;\n      } else {\n        this.config.startTime = `${time[0]}:${item}`;\n      }\n\n      const startDateEpoch: number = moment(this.config.startDate, DEFAULT_DATE_FORMAT).valueOf();\n      const endDateEpoch: number = moment(this.config.endDate, DEFAULT_DATE_FORMAT).valueOf();\n      if (startDateEpoch === endDateEpoch) {\n        this.state.times.right = this.generateTimePicker(this.config.startTime, \"right\");\n      }\n    } else {\n      time = this.config.endTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.endTime = `${item}:${time[1]}`;\n      } else {\n        this.config.endTime = `${time[0]}:${item}`;\n      }\n    }\n\n    if (timeItem === \"hour\") {\n      this.state.selectedHour[side] = this.service.convertToViewTimeItem(item);\n    } else {\n      this.state.selectedMinute[side] = this.service.convertToViewTimeItem(item);\n    }\n  }\n\n  onTimeApply() {\n    this.dateRangeSelected();\n    this.updateInputField();\n  }\n\n  // Helpers\n  init() {\n    this.state.isValidFilter = false;\n    if (!this.config) {\n      this.config = Object.assign(this.service.getDefaultOptions(), this.service.getDefaultSettings());\n    }\n    this.initialize();\n    this.parseOptions();\n    this.updateInputField();\n  }\n\n  initialize() {\n    this.state = this.service.getDefaultState();\n  }\n\n  parseOptions() {\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        if (!isNil(this.options[k])) {\n          this.config[k] = this.options[k];\n        } else {\n          console.warn(`WARN_NGX_DATETIME_RANGE_PICKER:\n            'options.${k}' is undefined or null. Setting default value.\n          `);\n        }\n      });\n    }\n    if (this.settings !== undefined) {\n      Object.keys(this.settings).forEach((k) => {\n        if (!isNil(this.settings[k])) {\n          this.config[k] = this.settings[k];\n        } else {\n          console.warn(`WARN_NGX_DATETIME_RANGE_PICKER:\n            'settings.${k}' is undefined or null. Setting default value.\n          `);\n        }\n      });\n    }\n\n    // check if inputDateFormat is provided\n    if (!this.config.inputDateFormat) {\n      console.warn(`WARN_NGX_DATETIME_RANGE_PICKER:\n        'inputDateFormat' is required to convert dates.\n        'inputDateFormat' not provided. Setting it to YYYY-MM-DD.\n      `);\n      this.config.inputDateFormat = DEFAULT_DATE_FORMAT;\n    }\n\n    if (this.config.type === \"weekly\" || this.config.type === \"yearly\") {\n      this.config.showRowNumber = false;\n    }\n    if (this.config.singleDatePicker) {\n      this.config.startDate = cloneDeep(this.config.endDate) as string;\n    }\n\n    this.selectTimeZone();\n    this.parseOptionsToDefaultDateFormat();\n    this.processDateRangeModel();\n    this.sanitizeDates();\n    this.processRanges();\n    this.doDateRangeModelChange();\n    this.updateCalendar();\n  }\n\n  selectTimeZone() {\n    if (this.config.timezoneSupport) {\n      if (!this.config.defaultTimezone) {\n        this.config.defaultTimezone = USA_TZ_CODE;\n      }\n      this.state.selectedTimezone = this.config.defaultTimezone;\n    }\n\n    if (this.config.useLocalTimezone) {\n      this.state.selectedTimezone = this.state.localTimezone;\n    }\n    this.onTimezoneChange(this.state.selectedTimezone);\n  }\n\n  parseOptionsToDefaultDateFormat() {\n    this.config.minDate = this.service.formatDateToDefaultFormat(this.config.minDate, this.config.inputDateFormat);\n    this.config.maxDate = this.service.formatDateToDefaultFormat(this.config.maxDate, this.config.inputDateFormat);\n    this.config.startDate = this.service.formatDateToDefaultFormat(this.config.startDate, this.config.inputDateFormat);\n    this.config.endDate = this.service.formatDateToDefaultFormat(this.config.endDate, this.config.inputDateFormat);\n\n    if (this.config.timePicker) {\n      this.config.minTime = this.service.formatTimeToDefaultFormat(this.config.minTime);\n      this.config.maxTime = this.service.formatTimeToDefaultFormat(this.config.maxTime);\n      this.config.startTime = this.service.formatTimeToDefaultFormat(this.config.startTime);\n      this.config.endTime = this.service.formatTimeToDefaultFormat(this.config.endTime);\n    }\n  }\n\n  /**\n   * @desc sets startDate, endDate\n   */\n  processDateRangeModel() {\n    if (undefined === this.dateRangeModel || isEmpty(this.dateRangeModel)) {\n      return;\n    }\n\n    if (!this.dateRangeModel[this.config.type]) {\n      const _optionsKeys: string[] = Object.keys(this.service.getDefaultOptions());\n      const _model = {};\n      Object.keys(this.dateRangeModel).forEach((key: string) => {\n        if (_optionsKeys.includes(key)) {\n          _model[key] = this.dateRangeModel[key];\n          delete this.dateRangeModel[key];\n        }\n      });\n      this.dateRangeModel[this.config.type] = _model;\n      if (!this.dateRangeModel[this.config.type]) {\n        return;\n      }\n    }\n\n    this.config.dateArray = this.dateRangeModel[this.config.type].dateArray || this.config.dateArray;\n\n    this.handleDateArray();\n\n    if (this.config.dateArray.length) {\n      if (!this.dateRangeModel[this.config.type].minDate) {\n        this.dateRangeModel[this.config.type].minDate = this.config.dateArray[0] || this.config.minDate;\n      }\n      if (!this.dateRangeModel[this.config.type].maxDate) {\n        this.dateRangeModel[this.config.type].maxDate =\n          this.config.dateArray[this.config.dateArray.length - 1] || this.config.maxDate;\n      }\n      if (!this.dateRangeModel[this.config.type].startDate) {\n        this.dateRangeModel[this.config.type].startDate = this.config.dateArray[0] || this.config.startDate;\n      }\n      if (!this.dateRangeModel[this.config.type].endDate) {\n        this.dateRangeModel[this.config.type].endDate =\n          this.config.dateArray[this.config.dateArray.length - 1] || this.config.endDate;\n      }\n    }\n\n    const dateRangeMinDate = this.dateRangeModel[this.config.type].minDate || this.config.minDate;\n    const dateRangeMaxDate = this.dateRangeModel[this.config.type].maxDate || this.config.maxDate;\n    const dateRangeStartDate = this.dateRangeModel[this.config.type].startDate || this.config.startDate;\n    const dateRangeEndDate = this.dateRangeModel[this.config.type].endDate || this.config.endDate;\n\n    this.config.minDate = this.service.formatDateToDefaultFormat(dateRangeMinDate, this.config.inputDateFormat);\n    this.config.maxDate = this.service.formatDateToDefaultFormat(dateRangeMaxDate, this.config.inputDateFormat);\n    this.config.startDate = this.service.formatDateToDefaultFormat(dateRangeStartDate, this.config.inputDateFormat);\n    this.config.endDate = this.service.formatDateToDefaultFormat(dateRangeEndDate, this.config.inputDateFormat);\n\n    if (this.config.timePicker) {\n      const dateRangeMinTime = this.dateRangeModel[this.config.type].minTime || this.config.minTime;\n      const dateRangeMaxTime = this.dateRangeModel[this.config.type].maxTime || this.config.maxTime;\n      const dateRangeStartTime = this.dateRangeModel[this.config.type].startTime || this.config.startTime;\n      const dateRangeEndTime = this.dateRangeModel[this.config.type].endTime || this.config.endTime;\n\n      this.config.minTime = this.service.formatTimeToDefaultFormat(dateRangeMinTime);\n      this.config.maxTime = this.service.formatTimeToDefaultFormat(dateRangeMaxTime);\n      this.config.startTime = this.service.formatTimeToDefaultFormat(dateRangeStartTime);\n      this.config.endTime = this.service.formatTimeToDefaultFormat(dateRangeEndTime);\n    }\n  }\n\n  /**\n   * @desc sets minDate, maxDate, startDate, endDate if not passed\n   */\n  handleDateArray() {\n    if (this.config.dateArray && this.config.dateArray.length) {\n      // converts all the dates to DEFAULT_DATE_FORMAT\n      this.config.dateArray = this.service.getSanitizedDateArray(this.config);\n\n      // sort in asc order\n      this.config.dateArray = this.config.dateArray.sort((date1, date2) => {\n        const value1: number = moment(date1, DEFAULT_DATE_FORMAT).valueOf();\n        const value2: number = moment(date2, DEFAULT_DATE_FORMAT).valueOf();\n        return value1 - value2;\n      });\n    }\n  }\n\n  sanitizeDates() {\n    const subtractWeekCount = 0;\n    const setDate = (type: string) => {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FORMAT)\n        .endOf(type)\n        .format(DEFAULT_DATE_FORMAT);\n      this.config.maxDate =\n        type === \"week\"\n          ? moment(this.config.maxDate, DEFAULT_DATE_FORMAT)\n              .subtract(subtractWeekCount, \"week\")\n              .endOf(type)\n              .format(DEFAULT_DATE_FORMAT)\n          : moment(this.config.maxDate, DEFAULT_DATE_FORMAT)\n              .endOf(type)\n              .format(DEFAULT_DATE_FORMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FORMAT)\n        .endOf(type)\n        .format(DEFAULT_DATE_FORMAT);\n      this.config.endDate =\n        type === \"week\"\n          ? moment(this.config.endDate, DEFAULT_DATE_FORMAT)\n              .subtract(subtractWeekCount, \"week\")\n              .endOf(type)\n              .format(DEFAULT_DATE_FORMAT)\n          : moment(this.config.endDate, DEFAULT_DATE_FORMAT)\n              .endOf(type)\n              .format(DEFAULT_DATE_FORMAT);\n    };\n\n    if (this.config.type === \"weekly\") {\n      setDate.bind(this)(\"week\");\n    } else if (this.config.type === \"monthly\") {\n      setDate.bind(this)(\"month\");\n    } else if (this.config.type === \"quarterly\") {\n      setDate.bind(this)(\"quarter\");\n    } else if (this.config.type === \"yearly\") {\n      setDate.bind(this)(\"year\");\n    }\n\n    if (\n      moment(this.config.startDate, DEFAULT_DATE_FORMAT).valueOf() <\n      moment(this.config.minDate, DEFAULT_DATE_FORMAT).valueOf()\n    ) {\n      this.config.minDate = this.config.startDate;\n    }\n\n    if (\n      moment(this.config.endDate, DEFAULT_DATE_FORMAT).valueOf() >\n      moment(this.config.maxDate, DEFAULT_DATE_FORMAT).valueOf()\n    ) {\n      this.config.maxDate = this.config.endDate;\n    }\n  }\n\n  processRanges() {\n    if (this.config.showRanges && !this.config.singleDatePicker) {\n      this.config.availableRanges = this.service.createDefaultRanges(this.config);\n      this.selectActiveRange();\n    } else {\n      this.state.activeRange = \"Custom Range\";\n      this.onRangeClick(this.state.activeRange, null);\n    }\n  }\n\n  selectActiveRange() {\n    for (const range in this.config.availableRanges) {\n      if (range) {\n        const rangeModel = this.config.availableRanges[range];\n        if (this.config.startDate === rangeModel.startDate && this.config.endDate === rangeModel.endDate) {\n          this.state.activeRange = range;\n          this.updateActiveItem();\n        }\n      }\n    }\n\n    if (!this.state.activeRange) {\n      this.state.activeRange = \"Custom Range\";\n      this.onRangeClick(this.state.activeRange, null);\n    }\n  }\n\n  generateCalendar(date: string | number, side: string): DateSide {\n    this.state.selectedMonth[side] = moment(date, DEFAULT_DATE_FORMAT).format(\"MMM\");\n    this.state.selectedYear[side] = this.service.getSelectedYear(date);\n    const calendarLabel = `${this.state.selectedMonth[side]} ${this.state.selectedYear[side]}`;\n\n    const dates: DateSide = {\n      label: calendarLabel,\n      months: this.service.getMonthsAvailable(this.config.minDate, this.config.maxDate, this.state.selectedYear[side]),\n      years: this.service.getYearsAvailable(this.config),\n      itemRows: [] as Object[]\n    };\n\n    this.state.weekDayOptions = [\"\"];\n\n    if (this.config.type !== \"yearly\") {\n      // moment returns wrong week number\n      const monthStartWeekNumber: number = moment(date, DEFAULT_DATE_FORMAT)\n        .year(this.state.selectedYear[side])\n        .startOf(\"month\")\n        .week(); // previousMonthLastWeek\n      const yearStartDate = moment(this.state.selectedYear[side], \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FORMAT);\n      let numberOfRows = 1;\n\n      if (this.config.type === \"daily\") {\n        numberOfRows = this.service.getNumberOfWeeks(date);\n        this.state.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n      } else if (this.config.type === \"weekly\") {\n        numberOfRows = 8;\n        this.state.weekDayOptions = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      } else if (this.config.type === \"monthly\") {\n        numberOfRows = 4;\n        this.state.weekDayOptions = [\"\", \"\", \"\"];\n      } else if (this.config.type === \"quarterly\") {\n        numberOfRows = 4;\n        this.state.weekDayOptions = [\"\"];\n      }\n\n      for (let dateRows = 0; dateRows < numberOfRows; dateRows++) {\n        const dateRowObj: DateRow = {\n          rowNumber: null as string,\n          rowNumberText: null as string,\n          items: [] as DateCharacteristics[]\n        };\n\n        const rowOptions: RowOptions = {\n          type: this.config.type,\n          monthStartWeekNumber: monthStartWeekNumber,\n          dateRows: dateRows,\n          year: this.state.selectedYear[side],\n          itemCount: null\n        };\n\n        const { rowNumber, columns }: RowVariables = this.service.getCalendarRowVariables(rowOptions);\n\n        dateRowObj.rowNumber = rowNumber;\n        dateRowObj.rowNumberText = this.service.getCalendarRowNumberText(this.config.type, rowNumber);\n\n        for (let rowItem = 0; rowItem <= columns; rowItem++) {\n          const rowItemOptions: RowItemOptions = {\n            type: this.config.type,\n            monthStartWeekNumber,\n            dateRows,\n            rowNumber,\n            yearStartDate,\n            year: this.state.selectedYear[side],\n            rowItem,\n            columns\n          };\n\n          const {\n            currentItemDate,\n            rowItemText,\n            firstDay,\n            lastDay,\n            itemCount\n          }: RowItemVariables = this.service.getCalendarRowItemVariables(rowItemOptions);\n\n          rowOptions.itemCount = itemCount;\n\n          const { available, inRange, active, today }: DateCharacteristics = this.service.getDateCharacteristics(\n            this.config,\n            this.state,\n            currentItemDate,\n            calendarLabel,\n            side\n          );\n\n          const itemObj: ActiveItemSide = {\n            date: currentItemDate,\n            rowItemText,\n            firstDay,\n            lastDay,\n            available,\n            inRange,\n            active,\n            today\n          };\n          if (this.service.isRowIemValid(rowOptions)) {\n            if (active) {\n              this.state.activeItem[side] = itemObj;\n            }\n            dateRowObj.items.push(itemObj);\n          }\n        }\n        dates.itemRows.push(dateRowObj);\n      }\n    }\n\n    this.state.calendarAvailable[side] = true;\n\n    // generate month/year select\n    setTimeout(() => {\n      const options = {\n        side,\n        onChange: this.onCalendarLabelChange.bind(this),\n        type: \"month\",\n        items: dates[\"months\"],\n        selected: this.state.selectedMonth[side]\n      };\n      this.printSelect(options);\n\n      options.type = \"year\";\n      options.items = dates[\"years\"];\n      options.selected = this.state.selectedYear[side];\n      this.printSelect(options);\n    });\n    return dates;\n  }\n\n  generateTimePicker(time: string, side: string): TimeSide {\n    const timeObject: TimeSide = {\n      hour: [],\n      minute: [],\n      meridian: []\n    };\n\n    let startHour = 0;\n    const endHour = 23;\n    let startMinute = 0;\n    const endMinute = 59;\n    let selectedHour = side === \"left\" ? startHour : endHour;\n    let selectedMinute = side === \"left\" ? startMinute : endMinute;\n    const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FORMAT).valueOf();\n    const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FORMAT).valueOf();\n\n    if (time) {\n      selectedHour = moment(time, DEFAULT_TIME_FORMAT).format(\"H\");\n      selectedMinute = moment(time, DEFAULT_TIME_FORMAT).format(\"m\");\n\n      if (side === \"right\" && startDateEpoch === endDateEpoch) {\n        startHour = selectedHour;\n        startMinute = selectedMinute;\n      }\n    }\n\n    // let dateOptions = {\n    //   timeZone: TZ_NAMES[this.state.selectedTimezone],\n    //   timeZoneName: 'short',\n    //   hour12: false\n    // }\n    // let startDateObj = new Date(`Jan 1 1970 ${startHour}:${startMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // let endDateObj = new Date(`Jan 1 1970 ${endHour}:${endMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // startTime = startDateObj.toLocaleTimeString('en-US', dateOptions);\n    // endTime = endDateObj.toLocaleTimeString('en-US', dateOptions);\n\n    // startHour = moment(startTime, 'HH:mm:ss').format('H');\n    // endHour = moment(endTime, 'HH:mm:ss').format('H');\n    // startMinute = moment(startTime, 'HH:mm:ss').format('m');\n    // endMinute = moment(endTime, 'HH:mm:ss').format('m');\n\n    for (let h = startHour; h <= 23; h++) {\n      const stringified_h = this.service.convertToViewTimeItem(h);\n      timeObject.hour.push(stringified_h);\n    }\n    for (let m = startMinute; m <= 59; m++) {\n      const stringified_m = this.service.convertToViewTimeItem(m);\n      timeObject.minute.push(stringified_m);\n    }\n\n    this.state.selectedHour[side] = this.service.convertToViewTimeItem(selectedHour);\n    this.state.selectedMinute[side] = this.service.convertToViewTimeItem(selectedMinute);\n\n    if (side === \"left\") {\n      this.config.startTime = `${this.state.selectedHour[side]}:${this.state.selectedMinute[side]}`;\n    } else if (side === \"right\") {\n      this.config.endTime = `${this.state.selectedHour[side]}:${this.state.selectedMinute[side]}`;\n    }\n\n    // generate hour/minute select\n    setTimeout(() => {\n      const options = {\n        side,\n        onChange: this.onTimeLabelChange.bind(this),\n        type: \"hour\",\n        items: timeObject[\"hour\"],\n        selected: this.state.selectedHour[side]\n      };\n      this.printSelect(options);\n\n      options.type = \"minute\";\n      options.items = timeObject[\"minute\"];\n      options.selected = this.state.selectedMinute[side];\n      this.printSelect(options);\n    });\n    return timeObject;\n  }\n\n  updateInputField() {\n    const startDate = this.service.formatStartDate(this.config, this.config.viewDateFormat);\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat)\n      : \"\";\n\n    if (this.config.singleDatePicker) {\n      let startDateText = startDate;\n      let endDataText = endDate;\n      let dateText = \"\";\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n      if (this.config.displayBeginDate) {\n        dateText = `${startDateText}`;\n      } else if (this.config.displayEndDate) {\n        dateText = `${endDataText}`;\n      } else {\n        dateText = `${startDateText} - ${endDataText}`;\n      }\n\n      this.state.selectedDateText = dateText;\n    } else {\n      let startDateText = startDate;\n      let endDataText = endDate;\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n\n      this.state.selectedDateText = `${startDateText} - ${endDataText}`;\n    }\n\n    if (this.canBeEmpty || this.state.selectedDateText.indexOf(\"nvalid\") < 0) {\n      this.state.isValidFilter = true;\n    }\n\n    if (this.config.type === \"yearly\") {\n      this.state.dateTitleText.left = `${startDate}`;\n      this.state.dateTitleText.right = `${endDate}`;\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  updateActiveItemInputField() {\n    if (!this.config.singleDatePicker) {\n      this.updateSide(\"left\");\n    }\n    this.updateSide(\"right\");\n  }\n\n  updateSide(side: string) {\n    let itemFirstDate = this.state.activeItem[side].firstDay;\n    let itemLastDate = this.state.activeItem[side].lastDay;\n    const itemText = this.state.activeItem[side].rowItemText;\n    itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat);\n    itemLastDate = moment(itemLastDate, DEFAULT_DATE_FORMAT).format(this.config.viewDateFormat);\n    if (this.config.type !== \"daily\") {\n      this.state.dateTitleText[side] = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n    } else {\n      this.state.dateTitleText[side] = `${itemFirstDate}`;\n    }\n  }\n\n  dateRangeSelected() {\n    const dateRangeModel: DateTimeRangeChangeOutput = this.getNgxDatetimeRangeChangeOutput();\n    this.state.isCalendarVisible = false;\n    this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n    this.doDateRangeModelChange();\n    this.dateRangeChanged.emit(dateRangeModel);\n  }\n\n  doDateRangeModelChange() {\n    const dateRangeModel: DateTimeRangeModelChangeOutput = this.getDateRangeModel(this.config.inputDateFormat);\n    this.dateRangeModelChange.emit(dateRangeModel);\n  }\n\n  getDateRangeModel(format?: string): DateTimeRangeModelChangeOutput {\n    let dRModel: DateTimeRangeModelChangeOutput = {};\n    if (undefined !== this.dateRangeModel && !isEmpty(this.dateRangeModel)) {\n      dRModel = cloneDeep(this.dateRangeModel) as {};\n    }\n    dRModel[this.config.type] = this.getNgxDatetimeRangeChangeOutput(format);\n    return dRModel;\n  }\n\n  getNgxDatetimeRangeChangeOutput(format?: string): DateTimeRangeChangeOutput {\n    let dateRangeChangeOutput: DateTimeRangeChangeOutput;\n    let outputDateFormat: string = this.config.outputDateFormat;\n    if (undefined !== format) {\n      outputDateFormat = format;\n    }\n    let startDate = this.service.formatStartDate(this.config, outputDateFormat);\n    let endDate = moment(this.config.endDate, DEFAULT_DATE_FORMAT).format(outputDateFormat);\n\n    if (this.config.selectedTimezone) {\n      startDate = this.service.formatToZoneDate(this.config.selectedTimezone, outputDateFormat, startDate);\n      endDate = this.service.formatToZoneDate(this.config.selectedTimezone, outputDateFormat, endDate);\n    }\n\n    dateRangeChangeOutput = {\n      activeRange: this.state.activeRange,\n      startDate,\n      endDate\n    };\n\n    if (this.config.timePicker) {\n      const startTime = this.config.startTime;\n      const endTime = this.config.endTime;\n\n      dateRangeChangeOutput = {\n        activeRange: this.state.activeRange,\n        startDate,\n        endDate,\n        startTime,\n        endTime\n      };\n    }\n\n    return dateRangeChangeOutput;\n  }\n\n  doApply() {\n    const startDate = this.config.startDate;\n    const endDate = this.config.endDate;\n\n    this.state.activeStartDate = startDate as string;\n    this.state.activeEndDate = endDate as string;\n\n    if (this.config.startDate && this.config.endDate) {\n      if (!this.config.timePicker) {\n        this.dateRangeSelected();\n      } else {\n        if (this.config.timePicker) {\n          this.state.sides.forEach((side) => {\n            this.state.times[side] = this.generateTimePicker(null, side);\n          });\n        }\n      }\n    }\n\n    let outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FORMAT).valueOf() : null;\n    let outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FORMAT).valueOf() : null;\n    if (this.config.outputDateFormat) {\n      outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FORMAT).format(this.config.outputDateFormat) : null;\n      outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FORMAT).format(this.config.outputDateFormat) : null;\n    }\n    this.selectedDate.emit({\n      startDate: outputStartDate,\n      endDate: outputEndDate\n    });\n\n    this.updateInputField();\n  }\n\n  onTimezoneChange(tz: string) {\n    this.state.selectedTimezone = tz;\n    this.state.todayTime = this.service.getZoneToday(this.state.selectedTimezone, this.config.viewDateFormat);\n\n    this.parseOptionsToDefaultDateFormat();\n    this.state.sides.forEach((side) => {\n      let date = this.config.startDate;\n      let time = this.config.startTime;\n      if (side === \"right\") {\n        date = this.config.endDate;\n        time = this.config.endTime;\n      }\n      this.state.dates[side] = this.generateCalendar(date, side);\n      if (this.config.timePicker) {\n        this.state.times[side] = this.generateTimePicker(time, side);\n      }\n    });\n  }\n\n  getSelectedTimeItemText(item: string, side: string) {\n    if (item === \"hour\") {\n      return this.state.selectedHour[side];\n    } else if (item === \"minute\") {\n      return this.state.selectedMinute[side];\n    }\n  }\n\n  setActiveItemOnRangeClick() {\n    this.updateActiveItem();\n    this.doApply();\n  }\n\n  updateActiveItem() {\n    const startDate: ActiveItemSide = this.service.getFirstLastDay(this.config.startDate as string, this.config.type);\n    const endDate: ActiveItemSide = this.service.getFirstLastDay(this.config.endDate as string, this.config.type);\n\n    if (this.config.type === \"weekly\") {\n      startDate.rowItemText = `W${this.service.getWeekNumber(startDate.firstDay)}`;\n      endDate.rowItemText = `W${this.service.getWeekNumber(endDate.firstDay)}`;\n    } else if (this.config.type === \"monthly\") {\n      startDate.rowItemText = `${moment(startDate.firstDay, DEFAULT_DATE_FORMAT).format(\"MMM\")}`;\n      endDate.rowItemText = `${moment(endDate.firstDay, DEFAULT_DATE_FORMAT).format(\"MMM\")}`;\n    } else if (this.config.type === \"quarterly\") {\n      startDate.rowItemText = `Quarter ${moment(startDate.firstDay, DEFAULT_DATE_FORMAT).quarter()}`;\n      endDate.rowItemText = `Quarter ${moment(endDate.firstDay, DEFAULT_DATE_FORMAT).quarter()}`;\n    }\n\n    Object.assign(this.state.activeItem.left, startDate);\n    Object.assign(this.state.activeItem.right, endDate);\n\n    // this.doApply();\n  }\n\n  /* ------------------------------------------ */\n  printSelect(options: { type: string; side: string; items: string[]; selected: string; onChange: Function }) {\n    let optionHTML = \"\";\n    options.items.forEach((item) => {\n      optionHTML += `\n        <option\n          class=\"dropdown-item\"\n          value=${item}\n          selected=${options.selected === item}\n        >\n          ${item}\n        </option>\n      `;\n    });\n\n    const selectEl = `\n      <select\n        class=\"${options.type}-select ngx-datetime-range-picker-select-panel ${options.type}-select-panel\">\n        ${optionHTML}\n      </select>\n    `;\n\n    const selectContainerEl = document.getElementById(`${options.type}Select`);\n    selectContainerEl.innerHTML = selectEl;\n    selectContainerEl.getElementsByTagName(\"select\")[0].addEventListener(\"change\", (e) => {\n      options.onChange(e, options.side, options.type);\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\nconst modules = [MatFormFieldModule, MatButtonModule, MatInputModule, MatIconModule, MatSelectModule];\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Iterate over {key: value}\n * Returns the keys of the object\n * Usage:\n *    let objKey of obj | ObjNgFor\n * Example:\n *    let obj = {a: 1, b: 2};\n *    *ngFor=\"let key of obj | ObjNgFor\"\n *    {{keys}}: {{obj[key]}}\n */\n\n@Pipe({ name: \"ObjNgFor\", pure: false })\nexport class ObjNgFor implements PipeTransform {\n  public transform(value: any, args: any[] = null): any {\n    return Object.keys(value); // .map(key => value[key]);\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { NgxDatetimeRangePickerComponent } from \"./ngx-datetime-range-picker.component\";\nimport { ObjNgFor } from \"./pipes/objNgFor.pipe\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\n\n@NgModule({\n  declarations: [ObjNgFor, NgxDatetimeRangePickerComponent],\n  imports: [CommonModule, FormsModule, MaterialModule],\n  exports: [NgxDatetimeRangePickerComponent, MaterialModule]\n})\nexport class NgxDatetimeRangePickerModule {\n  constructor(@Optional() @SkipSelf() parentModule: NgxDatetimeRangePickerModule) {\n    if (parentModule) {\n      throw new Error(`ERR_NGX_DATETIME_RANGE_PICKER:\n        NgxDatetimeRangePickerModule is already loaded. Import it in the AppModule only`);\n    }\n  }\n\n  public static forRoot(): ModuleWithProviders<NgxDatetimeRangePickerModule> {\n    return {\n      ngModule: NgxDatetimeRangePickerModule,\n      providers: [NgxDatetimeRangePickerService]\n    };\n  }\n}\n"]}